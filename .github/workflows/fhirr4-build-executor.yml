name: fhirr4-build

on:
  workflow_call:
    inputs:
      working_dir:
        required: true
        type: string
      bal_central_environment:
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    env:
       JAVA_OPTS: -Xmx4G
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.POM }}

      - name: Setup Java and Maven
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Setup latest Ballerina version
        uses: ballerina-platform/setup-ballerina@v1.1.0
        with:
          version: 2201.7.0
      
      - name: Print ballerina version
        run: bal version

      - name: Create settings.xml
        run: echo '<settings>
              <servers>
                <server>
                  <id>ballerina-language-repo</id>
                  <username>${{ github.actor }}</username>
                  <password>${{ secrets.PAT_TOKEN }}</password>
                </server>
              </servers>
            </settings>' > ~/.m2/settings.xml

      - name: Run maven build
        run: |
         mvn clean install -f fhirr4

      - name: Update version in POM
        if: ${{ inputs.bal_central_environment == 'PROD' }}
        id: increment_patch_version
        run: |
          cat ${{ inputs.working_dir }}/pom.xml
          # echo "${{ github.actor }}"
          # CURRENT_VERSION=$(grep -Po -m 1 '(?<=<version>)[\d.]+' $GITHUB_WORKSPACE/pom.xml)
          # IFS='.' read -ra VERSION_PARTS <<< "$CURRENT_VERSION"
          # PATCH_VERSION=$((VERSION_PARTS[2] + 1))
          # NEW_VERSION="${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.$PATCH_VERSION"
          # sed -i "0,/<version>${CURRENT_VERSION}<\/version>/s//<version>${NEW_VERSION}<\/version>/" $GITHUB_WORKSPACE/pom.xml
          # echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_OUTPUT
          # echo "CURRENT_VERSION=${CURRENT_VERSION}" >> $GITHUB_OUTPUT
          # echo "CURRENT_VERSION: $CURRENT_VERSION"
          # echo "VERSION_PARTS: ${VERSION_PARTS[@]}"
          # echo "PATCH_VERSION: $PATCH_VERSION"
          # echo "NEW_VERSION: $NEW_VERSION"
          
          # git config --global user.name "${{ github.actor }}"
          # git config --global user.email "gevinkarunarathne@gmail.com"
          # git add $GITHUB_WORKSPACE/pom.xml
          # git commit -m "Commitish"
          # git push origin main


      # - name: Commit changes and make a PR
      #   if: ${{ inputs.bal_central_environment == 'PROD' }}
      #   run: |
      #     # Extract the package name from working directory 
      #     packageName=$(basename ${{ inputs.working_dir }})

      #     # Commit changes
      #     git config --global user.name "${{ github.actor }}"
      #     git config --global user.email "gevinkarunarathne@gmail.com"
      #     git add ${{ inputs.working_dir }}/Ballerina.toml
      #     git commit -m " Prepare for next dev cycle"
      #     git push origin main
